float[] tx = new float[7];
float[] ty = new float[7];
float[] tz = new float[7];
float[] r = new float[7];
color[] colorF = new color[7];
float colorS = 255;
int i;
int k = 1;
boolean a = true; 
PImage imgSol;

void setup() {
  size(600, 600);
  for (i=0; i<7; i++) {
    tx[i] = int(random(100, 400));
    ty[i] = int(random(100, 400));
    colorF[i] = color( random(128, 255), random(128, 255), random(128, 255));
  }
}

void draw() {
  background(0);
  noStroke();
  for (i=0; i<7; i++) {
    pushMatrix(); //guarda el sistema de coordenadas actual
    translate(tx[i], ty[i]); //desplazar objetos dentro de la ventana de visualización
    rotate(r[i]*radians(45));
    fill(colorF[i]);
    switch (i) {
    case 0:
    case 1:
      scale(2.0);
      triangle(-25, -50, -25, 50, 25, 0);
      break;
    case 2:
    case 3:
      scale(1.0);
      triangle(-25, -50, -25, 50, 25, 0);
      break;
    case 4:
      scale(1.5);
      triangle(-25, -50, -25, 50, 25, 0);
      break;
    case 5:
      scale(1.0);
      beginShape();
      vertex(75, -25);
      vertex(-25, -25);
      vertex(-75, 25);
      vertex(25, 25);  
      endShape();
      break;
    case 6:
      scale(1.5);
      rect(-25, -25, 50, 50);
      break;
    }
    popMatrix();//restaura el sistema de coordenadas anterior
  }
  if (mousePressed) {
    tx[k] = mouseX;
    ty[k] = mouseY;
  }
  noFill();
  stroke(255);
  strokeWeight(2);
  rect(100, 100, 210, 210);
  imgSol = loadImage("tangram_sol.jpg"); //carga la imagen de la solución del tangram en la variable imgSol de tipo PImage
  image(imgSol, 400, 400, 100, 100);
  if (!a) { 
    noFill();
  } 
  if (a) { 
    fill(255);
  }
  rect(400, 400, 100, 100);
}

void mousePressed(){
  if (mouseButton == LEFT) {
    color mouseC = get (mouseX, mouseY);
    for (int j=0; j<7; j++) {
      if (colorF[j] == mouseC) {
        k = j;
      }
    }
  }
}

void mouseClicked() {
  if (mouseButton == RIGHT) {
    color mouseC = get (mouseX, mouseY);
    for (int j=0; j<7; j++) {
      if (colorF[j] == mouseC) { 
        r[j]= r[j]+1;
      }
    }
  }
}

void keyPressed() {
  if (key == 'S' || key == 's') {
    a = false; //deja ver la solución del tangram (imagen)
  }
}
